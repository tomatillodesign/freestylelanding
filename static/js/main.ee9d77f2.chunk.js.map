{"version":3,"sources":["logo.svg","ComplexCard.js","Cards.js","Trips.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ComplexCard","this","props","classes","entryTitle","link","entryExcerpt","entryContent","date","author","entrySpecialMessage","entryStartDate","entryEndDate","index","startingAt","parseInt","marginLeft","clear","startDateObj","Date","endDateRaw","replace","endDatePublish","publishDate","dateObject","toUTCString","divStyle","startingAtFormatted","toFixed","react_default","a","createElement","className","href","target","style","dangerouslySetInnerHTML","__html","React","Component","website","Cards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","allPostTitles","posts","dataRoute","_this2","fetch","then","res","json","setState","prevState","map","mapPosts","post","console","log","id","toLocaleDateString","excerpt","rendered","content","title","specialMessage","trip_meta_fields","special_message","startDateRaw","start_date_php","end_date","starting_at","key","concat","src_ComplexCard","wp","require","endpoint","App","class","src_Cards","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yJCyEzBC,+LAnEcC,KAAKC,MAAjBC,QAFH,IAKDC,EAAaH,KAAKC,MAAME,WAKxBC,GAJeJ,KAAKC,MAAMI,aACXL,KAAKC,MAAMK,aACdN,KAAKC,MAAMM,KACdP,KAAKC,MAAMO,OACbR,KAAKC,MAAMG,MAClBK,EAAsBT,KAAKC,MAAMQ,oBACjCC,EAAiBV,KAAKC,MAAMS,eAC5BC,EAAeX,KAAKC,MAAMU,aAC1BC,EAAQZ,KAAKC,MAAMW,MACnBC,EAAaC,SAASd,KAAKC,MAAMY,YAEjCE,EAAa,KACbC,EAAQ,UAERC,EAAe,IAAIC,KAAsB,IAAjBR,GAExBS,EAAaR,EAAaS,QAAQ,yBAA0B,YAC5DC,EAAiB,IAAIH,KAAKC,GAQ7B,SAASG,EAAYC,GAGhB,OAFUA,EAAWC,cACPJ,QAAQ,eAAgB,IAK7B,IAAVR,GAAeA,EAAM,IAAM,IAC1BG,EAAa,EACbC,EAAQ,QAGb,IAAIS,EAAW,CACbV,WAAYA,EACZC,MAAOA,GAGLU,EAAuBb,EAAYc,QAAQ,GAAGP,QAAQ,oBAAqB,OAEhF,OAEAQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,KAAGE,KAAM5B,EAAM6B,OAAO,UACjBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,MAAOT,GAC7BG,EAAAC,EAAAC,cAAA,MAAIK,wBA3BL,CAACC,OAAQjC,KA4BHyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeT,EAAYL,GAA1C,MAA4DK,EAAYD,IACxEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBtB,GACxCmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,gBAA8CL,EAA9C,kBA5DCW,IAAMC,YCE5BC,EAAU,uCAoECC,cAhEX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1C,KAAAwC,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA9C,QAES+C,MAAQ,CACTC,eAAgB,EAChBC,MAAO,GAGPC,UAAWX,EAAU,gDARfE,mFAeK,IAAAU,EAAAnD,KACfoD,MAAMpD,KAAK+C,MAAMG,WAChBG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAJ,GAAK,OAAIE,EAAKK,SAAS,SAACC,EAAWxD,GACrC,MAAO,CAAEgD,MAAOA,EAAMS,IAAIP,EAAKQ,gDAK9BC,GAEL,OADAC,QAAQC,IAAIF,GACL,CACLG,GAAIH,EAAKG,GACTxD,KAAM,IAAIW,KAAK0C,EAAKrD,MAAMyD,qBAC1B3D,aAAcuD,EAAKK,QAAQC,SAC3B5D,aAAcsD,EAAKO,QAAQD,SAC3BE,MAAOR,EAAKQ,MAAMF,SAClB9D,KAAMwD,EAAKxD,KACXiE,eAAgBT,EAAKU,iBAAiBC,gBAAgB,GACtDC,aAAcZ,EAAKU,iBAAiBG,eAAe,GACnDtD,WAAYyC,EAAKU,iBAAiBI,SAAS,GAC3C7D,WAAY+C,EAAKU,iBAAiBK,8CAYpC,OACA/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEZ/B,KAAK+C,MAAME,MAAMS,IAAI,SAACE,EAAMhD,GAAP,OACpBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB6C,IAAG,QAAAC,OAAUjB,EAAKG,GAAf,MAC9BnC,EAAAC,EAAAC,cAACgD,EAAD,CAAalE,MAAOA,EAAOR,KAAMwD,EAAKxD,KAAMD,WAAYyD,EAAKQ,MAAO7D,KAAMqD,EAAKrD,KAAMF,aAAcuD,EAAKvD,aAAcC,aAAcsD,EAAKtD,aAAcG,oBAAqBmD,EAAKS,eAAgB3D,eAAgBkD,EAAKY,aAAc7D,aAAciD,EAAKzC,WAAYN,WAAY+C,EAAK/C,wBAvDhRyB,aCFhByC,EAAK,IADGC,EAAS,IACZ,CAAU,CAAEC,SAAU,mEC0BhBC,GDxBK5C,6LCEhB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oCAA2DH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wCAAwCC,OAAO,SAASkD,MAAM,SAAtE,gCAE3DvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVH,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAACsD,EAAD,OAELxD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wCAAwCC,OAAO,UAAvD,8BAA8FL,EAAAC,EAAAC,cAAA,WADnG,qBAEuBF,EAAAC,EAAAC,cAAA,WAFvB,8BAGgCF,EAAAC,EAAAC,cAAA,WAHhC,oBAIsBF,EAAAC,EAAAC,cAAA,WAJtB,oBAKsBF,EAAAC,EAAAC,cAAA,WALtB,gDAXQQ,cCIZ+C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTvC,KAAK,SAAA2C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnD,QACf8C,UAAUC,cAAcO,WAK1BxC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBwC,MAAM,SAAAC,GACL1C,QAAQ0C,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,oBAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAf,OAAMiC,oBAAN,sBAEPzB,GAiDV,SAAiCO,GAE/BxC,MAAMwC,GACHvC,KAAK,SAAA4D,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMjE,KAAK,SAAA2C,GACjCA,EAAauB,aAAalE,KAAK,WAC7BkC,OAAOC,SAASgC,aAKpB7B,EAAgBC,KAGnBU,MAAM,WACLzC,QAAQC,IACN,mEArEA2D,CAAwB7B,GAIxBC,UAAUC,cAAcwB,MAAMjE,KAAK,WACjCQ,QAAQC,IACN,+GAMJ6B,EAAgBC,MCzCxB8B","file":"static/js/main.ee9d77f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nclass ComplexCard extends React.Component {\n\n     render() {\n\n         const { classes } = this.props;\n\n         // Set variables passed in\n         let entryTitle = this.props.entryTitle;\n         let entryExcerpt = this.props.entryExcerpt;\n         let entryContent = this.props.entryContent;\n         let entryDate = this.props.date;\n         let author = this.props.author;\n         let link = this.props.link;\n         let entrySpecialMessage = this.props.entrySpecialMessage;\n         let entryStartDate = this.props.entryStartDate;\n         let entryEndDate = this.props.entryEndDate;\n         let index = this.props.index;\n         let startingAt = parseInt(this.props.startingAt);\n\n         let marginLeft = '2%';\n         let clear = 'inherit';\n\n         let startDateObj = new Date(entryStartDate * 1000);\n         //let endDatePublish = new Date(entryEndDate);\n         let endDateRaw = entryEndDate.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\n         let endDatePublish = new Date(endDateRaw);\n\n         //let startDatePublish = startDateObj.getUTCDate() + ' - ' + startDateObj.getUTCFullYear();\n\n          function createMarkup() {\n            return {__html: entryTitle};\n          }\n\n          function publishDate(dateObject) {\n               let str = dateObject.toUTCString();\n               var res = str.replace(\"00:00:00 GMT\", \"\");\n               return res;\n          }\n\n\n          if( index === 0 || index%3 === 0 ) {\n               marginLeft = 0;\n               clear = 'both';\n          }\n\n          var divStyle = {\n            marginLeft: marginLeft,\n            clear: clear,\n          };\n\n          let startingAtFormatted = (startingAt).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n         return (\n\n         <div className=\"trip-card-area\">\n          <a href={link} target=\"_blank\">\n               <div className=\"trip-card\" style={divStyle}>\n                    <h2 dangerouslySetInnerHTML={createMarkup()} />\n                         <div className=\"entry-dates\">{publishDate(startDateObj)} - {publishDate(endDatePublish)}</div>\n                         <div className=\"entry-special-message\">{entrySpecialMessage}</div>\n                         <div className=\"starting-price\">Starting at ${startingAtFormatted} USD</div>\n               </div>\n          </a>\n          </div>\n\n          );\n\n         }\n\n}\n\nexport default ComplexCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ComplexCard from './ComplexCard.js';\n\nlet website = 'https://freestyleadventuretravel.com';\n\nclass Cards extends Component {\n\n    constructor() {\n    super();\n\n        this.state = {\n            allPostTitles : false,\n            posts: [],\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111',\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111&orderby=title&order=asc&start_date_php=1547251200',\n            dataRoute: website + '/wp-json/wp/v2/trips?specials=111&per_page=6',\n            //dataRoute: website + '/wp-json/wp/v2/posts?per_page=3',\n        }\n\n    }\n\n\n    componentDidMount(){\n        fetch(this.state.dataRoute)\n        .then(res => res.json())\n        .then(posts => this.setState((prevState, props) => {\n            return { posts: posts.map(this.mapPosts)};\n        }));\n    }\n\n\n    mapPosts(post){\n        console.log(post);\n        return {\n          id: post.id,\n          date: new Date(post.date).toLocaleDateString(),\n          entryExcerpt: post.excerpt.rendered,\n          entryContent: post.content.rendered,\n          title: post.title.rendered,\n          link: post.link,\n          specialMessage: post.trip_meta_fields.special_message[0],\n          startDateRaw: post.trip_meta_fields.start_date_php[0],\n          endDateRaw: post.trip_meta_fields.end_date[0],\n          startingAt: post.trip_meta_fields.starting_at,\n          // specialMessage: '',\n          // startDateRaw: '',\n          // endDateRaw: '',\n          // startingAt: '',\n        }\n    }\n\n\n\n    render() {\n\n        return (\n        <div className=\"cards\">\n\n          {this.state.posts.map((post, index) =>\n            <div className=\"clb-trip-card\" key={`post-${post.id}}`}>\n                <ComplexCard index={index} link={post.link} entryTitle={post.title} date={post.date} entryExcerpt={post.entryExcerpt} entryContent={post.entryContent} entrySpecialMessage={post.specialMessage} entryStartDate={post.startDateRaw} entryEndDate={post.endDateRaw} startingAt={post.startingAt} />\n            </div>\n          )}\n\n        </div>);\n\n    }\n\n}\n\n\nexport default Cards;\n","import React, { Component } from 'react';\nimport './App.css';\n\nvar WPAPI = require( 'wpapi' );\nvar wp = new WPAPI({ endpoint: 'https://freestyleadventuretravel.com/wp-json/wp/v2/trips?embed' });\n\nclass Trips extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n             trips: [],\n             test: false,\n        }\n\n        // Magical bind method here\n        // this.getTrips = this.getTrips.bind(this);\n        // this.mapPosts = this.mapPosts.bind(this);\n\n    }\n\n\n    // NOT working\n    // Try to copy the code from CARDS.js\n\n    componentDidMount(){\n         //Promises\n        wp.posts().then(function( data ) {\n\n            // do something with the returned posts\n            //console.log('SUCCESS');\n            //console.log(data);\n\n            // Loop thru all returned posts and add them each to state\n\n            this.setState({\n                 trips: data[0]\n             });\n\n        }).catch(function( err ) {\n            // handle error\n            //console.log('ERROR');\n        });\n\n\n        this.setState({\n             test: true\n         });\n\n    }\n\n\n\n    render() {\n\n         //console.log('RENDER STATE: ' + this.state.trips);\n\n         // Loop through state and render all posts onto the page\n\n        return (\n            <div>\n               <h2>TEST: {this.state.test.toString()}</h2>\n               <h2>{this.state.trips}</h2>\n            </div>\n        );\n    }\n}\n\n\nexport default Trips;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Cards from './Cards.js';\nimport Trips from './Trips.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to AntarcticDeals.com by <a href=\"https://freestyleadventuretravel.com/\" target=\"_blank\" class=\"fancy\">Freestyle Adventure Travel</a></h1>\n        </header>\n          <div className=\"wrap\">\n               <h2>Check Out These Upcoming Trips!</h2>\n               <Cards />\n          </div>\n          <footer className=\"footer\">\n               <a href=\"https://freestyleadventuretravel.com/\" target=\"_blank\">FREESTYLE ADVENTURE TRAVEL</a><br/>\n               Gobernador Paz 866<br/>\n               Ushuaia TdF, Argentina 9410<br/>\n               +54 9 2901 609792<br/>\n               +54 9 2901 606661<br/>\n               Proyectos Fueguinos EVT - Leg. 16259\n          </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}