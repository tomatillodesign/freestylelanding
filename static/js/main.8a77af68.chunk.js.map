{"version":3,"sources":["ComplexCard.js","Cards.js","ComplexPostCard.js","Posts.js","App.js","registerServiceWorker.js","index.js"],"names":["ComplexCard","entryTitle","this","props","link","entrySpecialMessage","entryStartDate","entryEndDate","index","startingAt","parseInt","marginLeft","clear","startDateObj","Date","endDateRaw","replace","endDatePublish","publishDate","dateObject","toUTCString","window","innerWidth","divStyle","startingAtFormatted","toFixed","react_default","a","createElement","className","href","target","rel","style","dangerouslySetInnerHTML","__html","React","Component","website","dateNow","Math","floor","now","Cards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","allPostTitles","posts","dataRoute","_this2","fetch","then","res","json","setState","prevState","map","mapPosts","post","id","date","toLocaleDateString","entryExcerpt","excerpt","rendered","entryContent","content","title","specialMessage","trip_meta_fields","special_message","startDateRaw","start_date_php","end_date","starting_at","key","concat","src_ComplexCard","ComplexPostCard","featuredMedia","src","alt","Posts","jetpack_featured_media_url","src_ComplexPostCard","App","src_Cards","src_Posts","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8a77af68.chunk.js","sourcesContent":["import React from 'react';\n\nclass ComplexCard extends React.Component {\n\n     render() {\n\n         //const { classes } = this.props;\n\n         // Set variables passed in\n         let entryTitle = this.props.entryTitle;\n         //let entryExcerpt = this.props.entryExcerpt;\n         //let entryContent = this.props.entryContent;\n         //let entryDate = this.props.date;\n         //let author = this.props.author;\n         let link = this.props.link;\n         let entrySpecialMessage = this.props.entrySpecialMessage;\n         let entryStartDate = this.props.entryStartDate;\n         let entryEndDate = this.props.entryEndDate;\n         let index = this.props.index;\n         let startingAt = parseInt(this.props.startingAt);\n\n         let marginLeft = '1.66666666667%';\n         let clear = 'inherit';\n\n         let startDateObj = new Date(entryStartDate * 1000);\n         //let endDatePublish = new Date(entryEndDate);\n         let endDateRaw = entryEndDate.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\n         let endDatePublish = new Date(endDateRaw);\n\n         let lWidth = window.innerWidth;\n\n         //let startDatePublish = startDateObj.getUTCDate() + ' - ' + startDateObj.getUTCFullYear();\n\n          function createMarkup() {\n            return {__html: entryTitle};\n          }\n\n          function publishDate(dateObject) {\n               let str = dateObject.toUTCString();\n               var res = str.replace(\"00:00:00 GMT\", \"\");\n               return res;\n          }\n\n\n          if( lWidth > 768 ) {\n               if( index === 0 || index%3 === 0 ) {\n                    marginLeft = 0;\n                    clear = 'both';\n               }\n          }\n\n          var divStyle = {\n            marginLeft: marginLeft,\n            clear: clear,\n          };\n\n          let startingAtFormatted = (startingAt).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n         return (\n\n         <div className=\"trip-card-area\">\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n               <div className=\"trip-card\" style={divStyle}>\n                    <h2 dangerouslySetInnerHTML={createMarkup()} />\n                         <div className=\"entry-dates\">{publishDate(startDateObj)} - {publishDate(endDatePublish)}</div>\n                         <div className=\"starting-price\">Starting at ${startingAtFormatted} USD</div>\n                         <div className=\"entry-special-message\">{entrySpecialMessage}</div>\n               </div>\n          </a>\n          </div>\n\n          );\n\n         }\n\n}\n\nexport default ComplexCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ComplexCard from './ComplexCard.js';\n\nlet website = 'https://freestyleadventuretravel.com';\nlet dateNow = Math.floor( Date.now() / 1000 );\n\nclass Cards extends Component {\n\n    constructor() {\n    super();\n\n        this.state = {\n            allPostTitles : false,\n            posts: [],\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111',\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111&orderby=title&order=asc&start_date_php=1547251200',\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111&per_page=3',\n            //dataRoute: website + '/wp-json/wp/v2/posts?per_page=3',\n            //dataRoute: website + '/wp-json/wp/v2/trips?&per_page=3&specials=111&filter[meta_key]=start_date_php&filter[meta_value]=' + dateNow + '&filter[meta_compare]=%3E',\n            dataRoute: website + '/wp-json/wp/v2/trips?&per_page=3&specials=206&filter[meta_key]=start_date_php&filter[meta_value]=' + dateNow + '&filter[meta_compare]=%3E',\n        }\n\n    }\n\n\n    componentDidMount(){\n        fetch(this.state.dataRoute)\n        .then(res => res.json())\n        .then(posts => this.setState((prevState, props) => {\n            return { posts: posts.map(this.mapPosts)};\n        }));\n    }\n\n\n    mapPosts(post){\n        // console.log(post); FOR TESTING PURPOSES\n        return {\n          id: post.id,\n          date: new Date(post.date).toLocaleDateString(),\n          entryExcerpt: post.excerpt.rendered,\n          entryContent: post.content.rendered,\n          title: post.title.rendered,\n          link: post.link,\n          specialMessage: post.trip_meta_fields.special_message[0],\n          startDateRaw: post.trip_meta_fields.start_date_php[0],\n          endDateRaw: post.trip_meta_fields.end_date[0],\n          startingAt: post.trip_meta_fields.starting_at,\n          // specialMessage: '',\n          // startDateRaw: '',\n          // endDateRaw: '',\n          // startingAt: '',\n        }\n    }\n\n\n\n    render() {\n\n        return (\n        <div className=\"cards\">\n\n          {this.state.posts.map((post, index) =>\n            <div className=\"clb-trip-card\" key={`post-${post.id}}`}>\n                <ComplexCard index={index} link={post.link} entryTitle={post.title} date={post.date} entryExcerpt={post.entryExcerpt} entryContent={post.entryContent} entrySpecialMessage={post.specialMessage} entryStartDate={post.startDateRaw} entryEndDate={post.endDateRaw} startingAt={post.startingAt} />\n            </div>\n          )}\n\n        </div>);\n\n    }\n\n}\n\n\nexport default Cards;\n","import React from 'react';\n\nclass ComplexPostCard extends React.Component {\n\n     render() {\n\n         //const { classes } = this.props;\n\n         // Set variables passed in\n         let entryTitle = this.props.entryTitle;\n         let entryExcerpt = this.props.entryExcerpt;\n         //let entryContent = this.props.entryContent;\n         //let entryDate = this.props.date;\n         //let author = this.props.author;\n         let link = this.props.link;\n         //let entrySpecialMessage = this.props.entrySpecialMessage;\n         //let entryStartDate = this.props.entryStartDate;\n         //let entryEndDate = this.props.entryEndDate;\n         let index = this.props.index;\n         //let startingAt = parseInt(this.props.startingAt);\n\n         let featuredMedia = this.props.featuredMedia;\n\n         let marginLeft = '1.66666666667%';\n         let clear = 'inherit';\n\n         //let startDateObj = new Date(entryStartDate * 1000);\n         //let endDatePublish = new Date(entryEndDate);\n         //let endDateRaw = entryEndDate.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\n         //let endDatePublish = new Date(endDateRaw);\n\n         let lWidth = window.innerWidth;\n\n         //let startDatePublish = startDateObj.getUTCDate() + ' - ' + startDateObj.getUTCFullYear();\n\n          function createMarkup() {\n            return {__html: entryTitle};\n          }\n\n          function createExcerpt() {\n            return {__html: entryExcerpt};\n          }\n\n          // function publishDate(dateObject) {\n          //      let str = dateObject.toUTCString();\n          //      var res = str.replace(\"00:00:00 GMT\", \"\");\n          //      return res;\n          // }\n\n          if( lWidth > 768 ) {\n               if( index === 0 || index%3 === 0 ) {\n                    marginLeft = 0;\n                    clear = 'both';\n               }\n          }\n\n          var divStyle = {\n            marginLeft: marginLeft,\n            clear: clear,\n          };\n\n          //let startingAtFormatted = (startingAt).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n         return (\n\n         <div className=\"trip-card-area\">\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n               <div className=\"trip-card\" style={divStyle}>\n                    <h2 dangerouslySetInnerHTML={createMarkup()} />\n                         <div className=\"featured-image\"><img src={featuredMedia} alt={entryTitle} /></div>\n                         <div className=\"entry-excerpt\" dangerouslySetInnerHTML={createExcerpt()} />\n               </div>\n          </a>\n          </div>\n\n          );\n\n         }\n\n}\n\nexport default ComplexPostCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ComplexPostCard from './ComplexPostCard.js';\n\nlet website = 'https://freestyleadventuretravel.com';\n\nclass Posts extends Component {\n\n    constructor() {\n    super();\n\n        this.state = {\n            allPostTitles : false,\n            posts: [],\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111',\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111&orderby=title&order=asc&start_date_php=1547251200',\n            //dataRoute: website + '/wp-json/wp/v2/trips?specials=111&per_page=3',\n            dataRoute: website + '/wp-json/wp/v2/posts?per_page=3',\n        }\n\n    }\n\n\n    componentDidMount(){\n        fetch(this.state.dataRoute)\n        .then(res => res.json())\n        .then(posts => this.setState((prevState, props) => {\n            return { posts: posts.map(this.mapPosts)};\n        }));\n    }\n\n\n    mapPosts(post){\n        // console.log(post); FOR TESTING PURPOSES\n        return {\n          id: post.id,\n          date: new Date(post.date).toLocaleDateString(),\n          entryExcerpt: post.excerpt.rendered,\n          entryContent: post.content.rendered,\n          title: post.title.rendered,\n          link: post.link,\n          // specialMessage: post.trip_meta_fields.special_message[0],\n          // startDateRaw: post.trip_meta_fields.start_date_php[0],\n          // endDateRaw: post.trip_meta_fields.end_date[0],\n          // startingAt: post.trip_meta_fields.starting_at,\n          specialMessage: '',\n          startDateRaw: '',\n          endDateRaw: '',\n          startingAt: '',\n          featuredMedia: post.jetpack_featured_media_url,\n        }\n    }\n\n\n\n    render() {\n\n        return (\n        <div className=\"Posts\">\n\n          {this.state.posts.map((post, index) =>\n            <div className=\"clb-trip-card\" key={`post-${post.id}}`}>\n                <ComplexPostCard index={index} link={post.link} entryTitle={post.title} date={post.date} entryExcerpt={post.entryExcerpt} entryContent={post.entryContent} entrySpecialMessage={post.specialMessage} entryStartDate={post.startDateRaw} entryEndDate={post.endDateRaw} startingAt={post.startingAt} featuredMedia={post.featuredMedia} />\n            </div>\n          )}\n\n        </div>);\n\n    }\n\n}\n\n\nexport default Posts;\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import backgroundImage from './backgroundImage.jpg';\nimport './App.css';\nimport Cards from './Cards.js';\nimport Posts from './Posts.js';\n//import Trips from './Trips.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to AntarcticDeals.com by <a href=\"https://freestyleadventuretravel.com/\" target=\"_blank\" className=\"fancy\" rel=\"noopener noreferrer\">Freestyle Adventure Travel</a></h1>\n        </header>\n          <div className=\"wrap\">\n               <h2 className=\"section-header\">Check Out These Upcoming Trips!</h2>\n               <div className=\"card-section\"><Cards />&nbsp;</div>\n               <h2 className=\"section-header\">Get the Latest Info & Helpful Tips</h2>\n               <div className=\"card-section\"><Posts />&nbsp;</div>\n          </div>\n          <footer className=\"footer\">\n               <a href=\"https://freestyleadventuretravel.com/\" target=\"_blank\" className=\"fancy\" rel=\"noopener noreferrer\">Freestyle Adventure Travel</a><br/>\n               Gobernador Paz 866<br/>\n               Ushuaia TdF, Argentina 9410<br/>\n               +54 9 2901 609792<br/>\n               +54 9 2901 606661<br/>\n               Proyectos Fueguinos EVT - Leg. 16259\n          </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}